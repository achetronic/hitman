version: v1alpha1
kind: Hitman
metadata:
  name: killing-sample
spec:
  synchronization:
    time: 1m
    processingDelay: 100ms 
  resources:

    - target:
        group: ""
        version: v1
        resource: pods

        # Select the resources by their name
        # Choose one of the following options
        name:
          matchRegex: ^(coredns-)
          #matchExact: "coredns-xxxxxxxxxx-yyyyy"

        # Select the namespace where the resources are located
        # Choose one of the following options
        namespace:
          matchRegex: ^(kube-system)
          #matchExact: kube-system

      # (Optional) Define a preStep to TODO
      preStep: |
        {{ $retrievedTargets := .targets }}

        {{/* Define a variable to store the processed targets */}}
        {{ $processedTargets := slice }}

        {{/* Loop through the retrieved targets */}}
        {{ range $i, $target := $retrievedTargets }}

          {{/* Do something with the target */}}
          {{ $processedTarget := $target }}

          {{/* Save the processed target */}}
          {{ $processedTargets = append $processedTargets $processedTarget }}

        {{ end }}

        {{/* Save the processed targets in a variable for later usage */}}
        {{ setVar "example" $processedTargets }}

      conditions:

      # Delete the resources when they are older than 10 minutes
      - key: |-
          {{/* Retrieve a previously defined variable if needed */}}
          {{ $processedTargets := .vars.example }}



          {{ $object := .object }}

          {{/* Define some variables */}}
          {{- $maxAgeMinutes := 10 -}}

          {{- $nowTimestamp := (now | unixEpoch) -}}
          {{- $podStartTime := (toDate "2006-01-02T15:04:05Z07:00" .object.status.startTime) | unixEpoch -}}

          {{/* Calculate the age of the resource in minutes */}}
          {{- $minutedFromNow := int (round (div (sub $nowTimestamp $podStartTime) 60) 0) -}}

          {{/* Print true ONLY if the resource is older than 5 minutes */}}
          {{- printf "%v" (ge $minutedFromNow $maxAgeMinutes) -}}
        value: true
